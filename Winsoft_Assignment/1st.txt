Q1: Merge two arrays by satisfying given constraints
Given two sorted arrays X[] and Y[] of size m and n each where m >= n and X[] has exactly n vacant cells,
merge elements of Y[] in their correct position in array X[], i.e., merge (X, Y) by keeping the sorted order.
For example,

Input: X[] = { 0, 2, 0, 3, 0, 5, 6, 0, 0 }
Y[] = { 1, 8, 9, 10, 15 } The vacant cells in X[] is represented by 0 
Output: X[] = { 1, 2, 3, 5, 6, 8, 9, 10, 15 }

Answer: 
//Java Code implementation 
 
import java.util.*;
public class MergeArrays {
    public static void mergeArrays(int[] arrayX, int[] arrayY) {
        int lengthX = arrayX.length;
        int lengthY = arrayY.length;
        
        int countZeroes = 0;
        for (int i = 0; i < lengthX; i++) {
            if (arrayX[i] == 0)
                countZeroes++;
        }
        
        int k = lengthX - 1;
        for (int i = lengthX - 1; i >= 0; i--) {
            if (arrayX[i] != 0) {
                arrayX[k--] = arrayX[i];
            }
        }
        
        int i = k + 1;
        int j = 0;
        k = 0;
        
        while (i < lengthX && j < lengthY) {
            if (arrayX[i] < arrayY[j])
                arrayX[k++] = arrayX[i++];
            else
                arrayX[k++] = arrayY[j++];
        }
        
        while (j < lengthY)
            arrayX[k++] = arrayY[j++];
    }   
    public static void main(String[] args) {
        int[] arrayX = { 0, 2, 0, 3, 0, 5, 6, 0, 0 };
        int[] arrayY = { 1, 8, 9, 10, 15 };
        
        mergeArrays(arrayX, arrayY);
        
        System.out.print("arrayX[] = { ");
        for (int i = 0; i < arrayX.length; i++) {
            if (i != arrayX.length - 1)
                System.out.print(arrayX[i] + ", ");
            else
                System.out.println(arrayX[i] + " }");
        }
    }
}